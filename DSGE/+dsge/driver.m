%
% Status : main Dynare file
%
% Warning : this file is generated automatically by Dynare
%           from model file (.mod)

clearvars -global
clear_persistent_variables(fileparts(which('dynare')), false)
tic0 = tic;
% Define global variables.
global M_ options_ oo_ estim_params_ bayestopt_ dataset_ dataset_info estimation_info
options_ = [];
M_.fname = 'dsge';
M_.dynare_version = '6.3';
oo_.dynare_version = '6.3';
options_.dynare_version = '6.3';
%
% Some global variables initialization
%
global_initialization;
M_.exo_names = cell(1,1);
M_.exo_names_tex = cell(1,1);
M_.exo_names_long = cell(1,1);
M_.exo_names(1) = {'EPS_G'};
M_.exo_names_tex(1) = {'EPS\_G'};
M_.exo_names_long(1) = {'EPS_G'};
M_.endo_names = cell(26,1);
M_.endo_names_tex = cell(26,1);
M_.endo_names_long = cell(26,1);
M_.endo_names(1) = {'Y'};
M_.endo_names_tex(1) = {'Y'};
M_.endo_names_long(1) = {'Y'};
M_.endo_names(2) = {'Y_G'};
M_.endo_names_tex(2) = {'Y\_G'};
M_.endo_names_long(2) = {'Y_G'};
M_.endo_names(3) = {'Y_NG'};
M_.endo_names_tex(3) = {'Y\_NG'};
M_.endo_names_long(3) = {'Y_NG'};
M_.endo_names(4) = {'C'};
M_.endo_names_tex(4) = {'C'};
M_.endo_names_long(4) = {'C'};
M_.endo_names(5) = {'C_G'};
M_.endo_names_tex(5) = {'C\_G'};
M_.endo_names_long(5) = {'C_G'};
M_.endo_names(6) = {'C_NG'};
M_.endo_names_tex(6) = {'C\_NG'};
M_.endo_names_long(6) = {'C_NG'};
M_.endo_names(7) = {'a'};
M_.endo_names_tex(7) = {'a'};
M_.endo_names_long(7) = {'a'};
M_.endo_names(8) = {'a_G'};
M_.endo_names_tex(8) = {'a\_G'};
M_.endo_names_long(8) = {'a_G'};
M_.endo_names(9) = {'a_NG'};
M_.endo_names_tex(9) = {'a\_NG'};
M_.endo_names_long(9) = {'a_NG'};
M_.endo_names(10) = {'K_G'};
M_.endo_names_tex(10) = {'K\_G'};
M_.endo_names_long(10) = {'K_G'};
M_.endo_names(11) = {'K_NG'};
M_.endo_names_tex(11) = {'K\_NG'};
M_.endo_names_long(11) = {'K_NG'};
M_.endo_names(12) = {'P'};
M_.endo_names_tex(12) = {'P'};
M_.endo_names_long(12) = {'P'};
M_.endo_names(13) = {'P_G'};
M_.endo_names_tex(13) = {'P\_G'};
M_.endo_names_long(13) = {'P_G'};
M_.endo_names(14) = {'P_NG'};
M_.endo_names_tex(14) = {'P\_NG'};
M_.endo_names_long(14) = {'P_NG'};
M_.endo_names(15) = {'r_D'};
M_.endo_names_tex(15) = {'r\_D'};
M_.endo_names_long(15) = {'r_D'};
M_.endo_names(16) = {'pi_G'};
M_.endo_names_tex(16) = {'pi\_G'};
M_.endo_names_long(16) = {'pi_G'};
M_.endo_names(17) = {'pi_NG'};
M_.endo_names_tex(17) = {'pi\_NG'};
M_.endo_names_long(17) = {'pi_NG'};
M_.endo_names(18) = {'I'};
M_.endo_names_tex(18) = {'I'};
M_.endo_names_long(18) = {'I'};
M_.endo_names(19) = {'I_G'};
M_.endo_names_tex(19) = {'I\_G'};
M_.endo_names_long(19) = {'I_G'};
M_.endo_names(20) = {'I_NG'};
M_.endo_names_tex(20) = {'I\_NG'};
M_.endo_names_long(20) = {'I_NG'};
M_.endo_names(21) = {'D'};
M_.endo_names_tex(21) = {'D'};
M_.endo_names_long(21) = {'D'};
M_.endo_names(22) = {'tau'};
M_.endo_names_tex(22) = {'tau'};
M_.endo_names_long(22) = {'tau'};
M_.endo_names(23) = {'z'};
M_.endo_names_tex(23) = {'z'};
M_.endo_names_long(23) = {'z'};
M_.endo_names(24) = {'A_G'};
M_.endo_names_tex(24) = {'A\_G'};
M_.endo_names_long(24) = {'A_G'};
M_.endo_names(25) = {'r_f'};
M_.endo_names_tex(25) = {'r\_f'};
M_.endo_names_long(25) = {'r_f'};
M_.endo_names(26) = {'r'};
M_.endo_names_tex(26) = {'r'};
M_.endo_names_long(26) = {'r'};
M_.endo_partitions = struct();
M_.param_names = cell(15,1);
M_.param_names_tex = cell(15,1);
M_.param_names_long = cell(15,1);
M_.param_names(1) = {'beta'};
M_.param_names_tex(1) = {'beta'};
M_.param_names_long(1) = {'beta'};
M_.param_names(2) = {'psi'};
M_.param_names_tex(2) = {'psi'};
M_.param_names_long(2) = {'psi'};
M_.param_names(3) = {'phi'};
M_.param_names_tex(3) = {'phi'};
M_.param_names_long(3) = {'phi'};
M_.param_names(4) = {'alpha_G'};
M_.param_names_tex(4) = {'alpha\_G'};
M_.param_names_long(4) = {'alpha_G'};
M_.param_names(5) = {'alpha_NG'};
M_.param_names_tex(5) = {'alpha\_NG'};
M_.param_names_long(5) = {'alpha_NG'};
M_.param_names(6) = {'Delta_agg'};
M_.param_names_tex(6) = {'Delta\_agg'};
M_.param_names_long(6) = {'Delta_agg'};
M_.param_names(7) = {'Delta_G'};
M_.param_names_tex(7) = {'Delta\_G'};
M_.param_names_long(7) = {'Delta_G'};
M_.param_names(8) = {'Delta_NG'};
M_.param_names_tex(8) = {'Delta\_NG'};
M_.param_names_long(8) = {'Delta_NG'};
M_.param_names(9) = {'gamma_G'};
M_.param_names_tex(9) = {'gamma\_G'};
M_.param_names_long(9) = {'gamma_G'};
M_.param_names(10) = {'gamma_NG'};
M_.param_names_tex(10) = {'gamma\_NG'};
M_.param_names_long(10) = {'gamma_NG'};
M_.param_names(11) = {'theta'};
M_.param_names_tex(11) = {'theta'};
M_.param_names_long(11) = {'theta'};
M_.param_names(12) = {'rho'};
M_.param_names_tex(12) = {'rho'};
M_.param_names_long(12) = {'rho'};
M_.param_names(13) = {'T_v'};
M_.param_names_tex(13) = {'T\_v'};
M_.param_names_long(13) = {'T_v'};
M_.param_names(14) = {'T_c'};
M_.param_names_tex(14) = {'T\_c'};
M_.param_names_long(14) = {'T_c'};
M_.param_names(15) = {'A_NG'};
M_.param_names_tex(15) = {'A\_NG'};
M_.param_names_long(15) = {'A_NG'};
M_.param_partitions = struct();
M_.exo_det_nbr = 0;
M_.exo_nbr = 1;
M_.endo_nbr = 26;
M_.param_nbr = 15;
M_.orig_endo_nbr = 26;
M_.aux_vars = [];
M_.Sigma_e = zeros(1, 1);
M_.Correlation_matrix = eye(1, 1);
M_.H = 0;
M_.Correlation_matrix_ME = 1;
M_.sigma_e_is_diagonal = true;
M_.det_shocks = [];
M_.surprise_shocks = [];
M_.learnt_shocks = [];
M_.learnt_endval = [];
M_.heteroskedastic_shocks.Qvalue_orig = [];
M_.heteroskedastic_shocks.Qscale_orig = [];
M_.matched_irfs = {};
M_.matched_irfs_weights = {};
options_.linear = false;
options_.block = false;
options_.bytecode = false;
options_.use_dll = false;
options_.ramsey_policy = false;
options_.discretionary_policy = false;
M_.nonzero_hessian_eqs = [1 2 3 4 5 6 10 11 12 14 15 16 17 18 19 20 22 23 24 25 26];
M_.hessian_eq_zero = isempty(M_.nonzero_hessian_eqs);
M_.eq_nbr = 26;
M_.ramsey_orig_eq_nbr = 0;
M_.ramsey_orig_endo_nbr = 0;
M_.set_auxiliary_variables = exist(['./+' M_.fname '/set_auxiliary_variables.m'], 'file') == 2;
M_.epilogue_names = {};
M_.epilogue_var_list_ = {};
M_.orig_maximum_endo_lag = 1;
M_.orig_maximum_endo_lead = 1;
M_.orig_maximum_exo_lag = 0;
M_.orig_maximum_exo_lead = 0;
M_.orig_maximum_exo_det_lag = 0;
M_.orig_maximum_exo_det_lead = 0;
M_.orig_maximum_lag = 1;
M_.orig_maximum_lead = 1;
M_.orig_maximum_lag_with_diffs_expanded = 1;
M_.lead_lag_incidence = [
 0 3 0;
 0 4 0;
 0 5 0;
 0 6 29;
 0 7 0;
 0 8 0;
 0 9 30;
 0 10 31;
 0 11 32;
 0 12 0;
 0 13 0;
 0 14 0;
 0 15 0;
 0 16 0;
 0 17 33;
 0 18 0;
 0 19 0;
 0 20 0;
 0 21 0;
 0 22 0;
 0 23 0;
 0 24 0;
 0 25 0;
 1 26 0;
 2 27 0;
 0 28 34;]';
M_.nstatic = 18;
M_.nfwrd   = 6;
M_.npred   = 2;
M_.nboth   = 0;
M_.nsfwrd   = 6;
M_.nspred   = 2;
M_.ndynamic   = 8;
M_.dynamic_tmp_nbr = [29; 55; 97; 184; 61; ];
M_.equations_tags = {
  1 , 'name' , 'C' ;
  2 , 'name' , 'r_D' ;
  3 , 'name' , 'C_G' ;
  4 , 'name' , 'C_NG' ;
  5 , 'name' , '5' ;
  6 , 'name' , '6' ;
  7 , 'name' , 'a' ;
  8 , 'name' , 'I_G' ;
  9 , 'name' , 'I_NG' ;
  10 , 'name' , 'a_G' ;
  11 , 'name' , 'a_NG' ;
  12 , 'name' , 'z' ;
  13 , 'name' , 'Y' ;
  14 , 'name' , 'Y_G' ;
  15 , 'name' , 'Y_NG' ;
  16 , 'name' , 'K_G' ;
  17 , 'name' , 'K_NG' ;
  18 , 'name' , 'P_G' ;
  19 , 'name' , 'P_NG' ;
  20 , 'name' , 'P' ;
  21 , 'name' , 'I' ;
  22 , 'name' , '22' ;
  23 , 'name' , 'pi_G' ;
  24 , 'name' , 'pi_NG' ;
  25 , 'name' , 'tau' ;
  26 , 'name' , 'D' ;
};
M_.mapping.Y.eqidx = [13 21 ];
M_.mapping.Y_G.eqidx = [13 14 23 ];
M_.mapping.Y_NG.eqidx = [13 15 24 ];
M_.mapping.C.eqidx = [1 3 4 5 6 10 12 18 19 20 21 25 ];
M_.mapping.C_G.eqidx = [3 20 ];
M_.mapping.C_NG.eqidx = [4 20 ];
M_.mapping.a.eqidx = [2 7 11 ];
M_.mapping.a_G.eqidx = [2 8 10 11 16 ];
M_.mapping.a_NG.eqidx = [9 11 17 ];
M_.mapping.K_G.eqidx = [14 16 23 26 ];
M_.mapping.K_NG.eqidx = [15 17 24 ];
M_.mapping.P.eqidx = [3 4 20 25 ];
M_.mapping.P_G.eqidx = [3 16 18 20 23 ];
M_.mapping.P_NG.eqidx = [4 17 19 20 24 ];
M_.mapping.r_D.eqidx = [1 2 ];
M_.mapping.pi_G.eqidx = [23 25 ];
M_.mapping.pi_NG.eqidx = [24 25 ];
M_.mapping.I.eqidx = [7 21 ];
M_.mapping.I_G.eqidx = [8 ];
M_.mapping.I_NG.eqidx = [9 ];
M_.mapping.D.eqidx = [26 ];
M_.mapping.tau.eqidx = [25 26 ];
M_.mapping.z.eqidx = [5 6 10 12 18 19 ];
M_.mapping.A_G.eqidx = [14 18 22 ];
M_.mapping.r_f.eqidx = [2 6 10 17 18 19 24 ];
M_.mapping.r.eqidx = [2 5 10 16 18 19 23 26 ];
M_.mapping.EPS_G.eqidx = [22 ];
M_.static_and_dynamic_models_differ = false;
M_.has_external_function = false;
M_.state_var = [24 25 ];
M_.maximum_lag = 1;
M_.maximum_lead = 1;
M_.maximum_endo_lag = 1;
M_.maximum_endo_lead = 1;
oo_.steady_state = zeros(26, 1);
M_.maximum_exo_lag = 0;
M_.maximum_exo_lead = 0;
oo_.exo_steady_state = zeros(1, 1);
M_.params = NaN(15, 1);
M_.endo_trends = struct('deflator', cell(26, 1), 'log_deflator', cell(26, 1), 'growth_factor', cell(26, 1), 'log_growth_factor', cell(26, 1));
M_.NNZDerivatives = [103; 185; 190; 320; ];
M_.dynamic_g1_sparse_rowval = int32([22 2 17 19 13 21 13 14 23 13 15 24 1 3 4 5 6 20 21 25 3 20 4 20 2 7 2 8 16 9 17 14 16 23 26 15 17 24 3 4 20 25 3 16 18 20 23 4 17 19 20 24 2 23 25 24 25 7 21 8 9 26 25 26 5 6 10 12 18 19 14 18 22 6 10 18 19 24 2 16 18 23 26 1 5 6 10 12 18 19 7 11 8 10 11 9 11 1 5 10 18 19 22 ]);
M_.dynamic_g1_sparse_colval = int32([24 25 25 25 27 27 28 28 28 29 29 29 30 30 30 30 30 30 30 30 31 31 32 32 33 33 34 34 34 35 35 36 36 36 36 37 37 37 38 38 38 38 39 39 39 39 39 40 40 40 40 40 41 42 42 43 43 44 44 45 46 47 48 48 49 49 49 49 49 49 50 50 50 51 51 51 51 51 52 52 52 52 52 56 56 56 56 56 56 56 59 59 60 60 60 61 61 67 78 78 78 78 79 ]);
M_.dynamic_g1_sparse_colptr = int32([1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 5 5 7 10 13 21 23 25 27 30 32 36 39 43 48 53 54 56 58 60 61 62 63 65 71 74 79 84 84 84 84 91 91 91 93 96 98 98 98 98 98 98 99 99 99 99 99 99 99 99 99 99 99 103 104 ]);
M_.dynamic_g2_sparse_indices = int32([1 56 56 ;
1 56 67 ;
1 67 67 ;
2 33 33 ;
2 33 34 ;
2 33 25 ;
2 33 52 ;
2 34 25 ;
2 34 52 ;
3 30 38 ;
3 30 39 ;
3 38 38 ;
3 38 39 ;
3 39 39 ;
4 30 38 ;
4 30 40 ;
4 38 38 ;
4 38 40 ;
4 40 40 ;
5 30 30 ;
5 30 56 ;
5 30 49 ;
5 30 78 ;
5 56 56 ;
5 56 49 ;
5 56 78 ;
5 49 49 ;
5 49 78 ;
5 78 78 ;
6 30 30 ;
6 30 56 ;
6 30 49 ;
6 56 56 ;
6 56 49 ;
6 49 49 ;
6 51 51 ;
10 56 56 ;
10 56 49 ;
10 56 51 ;
10 56 78 ;
10 49 49 ;
10 49 51 ;
10 49 78 ;
10 51 51 ;
10 51 78 ;
10 78 78 ;
11 59 59 ;
11 59 60 ;
12 56 56 ;
14 36 36 ;
14 36 50 ;
15 37 37 ;
16 34 34 ;
16 34 39 ;
16 34 52 ;
16 39 39 ;
16 39 52 ;
16 52 52 ;
17 35 35 ;
17 35 40 ;
17 35 25 ;
17 40 40 ;
17 40 25 ;
17 25 25 ;
18 56 56 ;
18 56 49 ;
18 56 50 ;
18 56 51 ;
18 56 52 ;
18 56 78 ;
18 49 49 ;
18 49 50 ;
18 49 51 ;
18 49 52 ;
18 49 78 ;
18 50 50 ;
18 50 51 ;
18 50 52 ;
18 50 78 ;
18 51 51 ;
18 51 52 ;
18 51 78 ;
18 52 78 ;
18 78 78 ;
19 56 56 ;
19 56 49 ;
19 56 25 ;
19 56 51 ;
19 56 78 ;
19 49 49 ;
19 49 25 ;
19 49 51 ;
19 49 78 ;
19 25 51 ;
19 25 78 ;
19 51 51 ;
19 51 78 ;
19 78 78 ;
20 30 30 ;
20 30 31 ;
20 30 32 ;
20 30 39 ;
20 30 40 ;
20 31 39 ;
20 32 40 ;
22 24 24 ;
22 50 50 ;
23 28 39 ;
23 36 52 ;
24 29 40 ;
24 37 51 ;
25 30 38 ;
26 36 52 ;
]);
M_.dynamic_g3_sparse_indices = int32([1 56 56 56 ;
1 56 56 67 ;
1 56 67 67 ;
1 67 67 67 ;
2 33 33 33 ;
2 33 33 34 ;
2 33 33 25 ;
2 33 33 52 ;
2 33 34 25 ;
2 33 34 52 ;
3 30 38 38 ;
3 30 38 39 ;
3 30 39 39 ;
3 38 38 38 ;
3 38 38 39 ;
3 38 39 39 ;
3 39 39 39 ;
4 30 38 38 ;
4 30 38 40 ;
4 30 40 40 ;
4 38 38 38 ;
4 38 38 40 ;
4 38 40 40 ;
4 40 40 40 ;
5 30 30 30 ;
5 30 30 56 ;
5 30 30 49 ;
5 30 30 78 ;
5 30 56 56 ;
5 30 56 49 ;
5 30 56 78 ;
5 30 49 49 ;
5 30 49 78 ;
5 30 78 78 ;
5 56 56 56 ;
5 56 56 49 ;
5 56 56 78 ;
5 56 49 49 ;
5 56 49 78 ;
5 56 78 78 ;
5 49 49 49 ;
5 49 49 78 ;
5 49 78 78 ;
5 78 78 78 ;
6 30 30 30 ;
6 30 30 56 ;
6 30 30 49 ;
6 30 56 56 ;
6 30 56 49 ;
6 30 49 49 ;
6 56 56 56 ;
6 56 56 49 ;
6 56 49 49 ;
6 49 49 49 ;
6 51 51 51 ;
10 56 56 56 ;
10 56 56 49 ;
10 56 56 51 ;
10 56 56 78 ;
10 56 49 49 ;
10 56 49 51 ;
10 56 49 78 ;
10 56 51 51 ;
10 56 51 78 ;
10 56 78 78 ;
10 49 49 49 ;
10 49 49 51 ;
10 49 49 78 ;
10 49 51 51 ;
10 49 51 78 ;
10 49 78 78 ;
10 51 51 51 ;
10 51 51 78 ;
10 51 78 78 ;
10 78 78 78 ;
11 59 59 59 ;
11 59 59 60 ;
12 56 56 56 ;
14 36 36 36 ;
14 36 36 50 ;
15 37 37 37 ;
16 34 34 34 ;
16 34 34 39 ;
16 34 34 52 ;
16 34 39 39 ;
16 34 39 52 ;
16 34 52 52 ;
16 39 39 39 ;
16 39 39 52 ;
16 39 52 52 ;
16 52 52 52 ;
17 35 35 35 ;
17 35 35 40 ;
17 35 35 25 ;
17 35 40 40 ;
17 35 40 25 ;
17 35 25 25 ;
17 40 40 40 ;
17 40 40 25 ;
17 40 25 25 ;
17 25 25 25 ;
18 56 56 56 ;
18 56 56 49 ;
18 56 56 50 ;
18 56 56 51 ;
18 56 56 52 ;
18 56 56 78 ;
18 56 49 49 ;
18 56 49 50 ;
18 56 49 51 ;
18 56 49 52 ;
18 56 49 78 ;
18 56 50 50 ;
18 56 50 51 ;
18 56 50 52 ;
18 56 50 78 ;
18 56 51 51 ;
18 56 51 52 ;
18 56 51 78 ;
18 56 52 78 ;
18 56 78 78 ;
18 49 49 49 ;
18 49 49 50 ;
18 49 49 51 ;
18 49 49 52 ;
18 49 49 78 ;
18 49 50 50 ;
18 49 50 51 ;
18 49 50 52 ;
18 49 50 78 ;
18 49 51 51 ;
18 49 51 52 ;
18 49 51 78 ;
18 49 52 78 ;
18 49 78 78 ;
18 50 50 50 ;
18 50 50 51 ;
18 50 50 52 ;
18 50 50 78 ;
18 50 51 51 ;
18 50 51 52 ;
18 50 51 78 ;
18 50 52 78 ;
18 50 78 78 ;
18 51 51 51 ;
18 51 51 52 ;
18 51 51 78 ;
18 51 52 78 ;
18 51 78 78 ;
18 52 78 78 ;
18 78 78 78 ;
19 56 56 56 ;
19 56 56 49 ;
19 56 56 25 ;
19 56 56 51 ;
19 56 56 78 ;
19 56 49 49 ;
19 56 49 25 ;
19 56 49 51 ;
19 56 49 78 ;
19 56 25 51 ;
19 56 25 78 ;
19 56 51 51 ;
19 56 51 78 ;
19 56 78 78 ;
19 49 49 49 ;
19 49 49 25 ;
19 49 49 51 ;
19 49 49 78 ;
19 49 25 51 ;
19 49 25 78 ;
19 49 51 51 ;
19 49 51 78 ;
19 49 78 78 ;
19 25 51 51 ;
19 25 51 78 ;
19 25 78 78 ;
19 51 51 51 ;
19 51 51 78 ;
19 51 78 78 ;
19 78 78 78 ;
20 30 30 30 ;
20 30 30 31 ;
20 30 30 32 ;
20 30 30 39 ;
20 30 30 40 ;
20 30 31 39 ;
20 30 32 40 ;
22 24 24 24 ;
22 50 50 50 ;
]);
M_.dynamic_g4_sparse_indices = int32([1 56 56 56 56 ;
1 56 56 56 67 ;
1 56 56 67 67 ;
1 56 67 67 67 ;
1 67 67 67 67 ;
2 33 33 33 33 ;
2 33 33 33 34 ;
2 33 33 33 25 ;
2 33 33 33 52 ;
2 33 33 34 25 ;
2 33 33 34 52 ;
3 30 38 38 38 ;
3 30 38 38 39 ;
3 30 38 39 39 ;
3 30 39 39 39 ;
3 38 38 38 38 ;
3 38 38 38 39 ;
3 38 38 39 39 ;
3 38 39 39 39 ;
3 39 39 39 39 ;
4 30 38 38 38 ;
4 30 38 38 40 ;
4 30 38 40 40 ;
4 30 40 40 40 ;
4 38 38 38 38 ;
4 38 38 38 40 ;
4 38 38 40 40 ;
4 38 40 40 40 ;
4 40 40 40 40 ;
5 30 30 30 30 ;
5 30 30 30 56 ;
5 30 30 30 49 ;
5 30 30 30 78 ;
5 30 30 56 56 ;
5 30 30 56 49 ;
5 30 30 56 78 ;
5 30 30 49 49 ;
5 30 30 49 78 ;
5 30 30 78 78 ;
5 30 56 56 56 ;
5 30 56 56 49 ;
5 30 56 56 78 ;
5 30 56 49 49 ;
5 30 56 49 78 ;
5 30 56 78 78 ;
5 30 49 49 49 ;
5 30 49 49 78 ;
5 30 49 78 78 ;
5 30 78 78 78 ;
5 56 56 56 56 ;
5 56 56 56 49 ;
5 56 56 56 78 ;
5 56 56 49 49 ;
5 56 56 49 78 ;
5 56 56 78 78 ;
5 56 49 49 49 ;
5 56 49 49 78 ;
5 56 49 78 78 ;
5 56 78 78 78 ;
5 49 49 49 49 ;
5 49 49 49 78 ;
5 49 49 78 78 ;
5 49 78 78 78 ;
5 78 78 78 78 ;
6 30 30 30 30 ;
6 30 30 30 56 ;
6 30 30 30 49 ;
6 30 30 56 56 ;
6 30 30 56 49 ;
6 30 30 49 49 ;
6 30 56 56 56 ;
6 30 56 56 49 ;
6 30 56 49 49 ;
6 30 49 49 49 ;
6 56 56 56 56 ;
6 56 56 56 49 ;
6 56 56 49 49 ;
6 56 49 49 49 ;
6 49 49 49 49 ;
6 51 51 51 51 ;
10 56 56 56 56 ;
10 56 56 56 49 ;
10 56 56 56 51 ;
10 56 56 56 78 ;
10 56 56 49 49 ;
10 56 56 49 51 ;
10 56 56 49 78 ;
10 56 56 51 51 ;
10 56 56 51 78 ;
10 56 56 78 78 ;
10 56 49 49 49 ;
10 56 49 49 51 ;
10 56 49 49 78 ;
10 56 49 51 51 ;
10 56 49 51 78 ;
10 56 49 78 78 ;
10 56 51 51 51 ;
10 56 51 51 78 ;
10 56 51 78 78 ;
10 56 78 78 78 ;
10 49 49 49 49 ;
10 49 49 49 51 ;
10 49 49 49 78 ;
10 49 49 51 51 ;
10 49 49 51 78 ;
10 49 49 78 78 ;
10 49 51 51 51 ;
10 49 51 51 78 ;
10 49 51 78 78 ;
10 49 78 78 78 ;
10 51 51 51 51 ;
10 51 51 51 78 ;
10 51 51 78 78 ;
10 51 78 78 78 ;
10 78 78 78 78 ;
11 59 59 59 59 ;
11 59 59 59 60 ;
12 56 56 56 56 ;
14 36 36 36 36 ;
14 36 36 36 50 ;
15 37 37 37 37 ;
16 34 34 34 34 ;
16 34 34 34 39 ;
16 34 34 34 52 ;
16 34 34 39 39 ;
16 34 34 39 52 ;
16 34 34 52 52 ;
16 34 39 39 39 ;
16 34 39 39 52 ;
16 34 39 52 52 ;
16 34 52 52 52 ;
16 39 39 39 39 ;
16 39 39 39 52 ;
16 39 39 52 52 ;
16 39 52 52 52 ;
16 52 52 52 52 ;
17 35 35 35 35 ;
17 35 35 35 40 ;
17 35 35 35 25 ;
17 35 35 40 40 ;
17 35 35 40 25 ;
17 35 35 25 25 ;
17 35 40 40 40 ;
17 35 40 40 25 ;
17 35 40 25 25 ;
17 35 25 25 25 ;
17 40 40 40 40 ;
17 40 40 40 25 ;
17 40 40 25 25 ;
17 40 25 25 25 ;
17 25 25 25 25 ;
18 56 56 56 56 ;
18 56 56 56 49 ;
18 56 56 56 50 ;
18 56 56 56 51 ;
18 56 56 56 52 ;
18 56 56 56 78 ;
18 56 56 49 49 ;
18 56 56 49 50 ;
18 56 56 49 51 ;
18 56 56 49 52 ;
18 56 56 49 78 ;
18 56 56 50 50 ;
18 56 56 50 51 ;
18 56 56 50 52 ;
18 56 56 50 78 ;
18 56 56 51 51 ;
18 56 56 51 52 ;
18 56 56 51 78 ;
18 56 56 52 78 ;
18 56 56 78 78 ;
18 56 49 49 49 ;
18 56 49 49 50 ;
18 56 49 49 51 ;
18 56 49 49 52 ;
18 56 49 49 78 ;
18 56 49 50 50 ;
18 56 49 50 51 ;
18 56 49 50 52 ;
18 56 49 50 78 ;
18 56 49 51 51 ;
18 56 49 51 52 ;
18 56 49 51 78 ;
18 56 49 52 78 ;
18 56 49 78 78 ;
18 56 50 50 50 ;
18 56 50 50 51 ;
18 56 50 50 52 ;
18 56 50 50 78 ;
18 56 50 51 51 ;
18 56 50 51 52 ;
18 56 50 51 78 ;
18 56 50 52 78 ;
18 56 50 78 78 ;
18 56 51 51 51 ;
18 56 51 51 52 ;
18 56 51 51 78 ;
18 56 51 52 78 ;
18 56 51 78 78 ;
18 56 52 78 78 ;
18 56 78 78 78 ;
18 49 49 49 49 ;
18 49 49 49 50 ;
18 49 49 49 51 ;
18 49 49 49 52 ;
18 49 49 49 78 ;
18 49 49 50 50 ;
18 49 49 50 51 ;
18 49 49 50 52 ;
18 49 49 50 78 ;
18 49 49 51 51 ;
18 49 49 51 52 ;
18 49 49 51 78 ;
18 49 49 52 78 ;
18 49 49 78 78 ;
18 49 50 50 50 ;
18 49 50 50 51 ;
18 49 50 50 52 ;
18 49 50 50 78 ;
18 49 50 51 51 ;
18 49 50 51 52 ;
18 49 50 51 78 ;
18 49 50 52 78 ;
18 49 50 78 78 ;
18 49 51 51 51 ;
18 49 51 51 52 ;
18 49 51 51 78 ;
18 49 51 52 78 ;
18 49 51 78 78 ;
18 49 52 78 78 ;
18 49 78 78 78 ;
18 50 50 50 50 ;
18 50 50 50 51 ;
18 50 50 50 52 ;
18 50 50 50 78 ;
18 50 50 51 51 ;
18 50 50 51 52 ;
18 50 50 51 78 ;
18 50 50 52 78 ;
18 50 50 78 78 ;
18 50 51 51 51 ;
18 50 51 51 52 ;
18 50 51 51 78 ;
18 50 51 52 78 ;
18 50 51 78 78 ;
18 50 52 78 78 ;
18 50 78 78 78 ;
18 51 51 51 51 ;
18 51 51 51 52 ;
18 51 51 51 78 ;
18 51 51 52 78 ;
18 51 51 78 78 ;
18 51 52 78 78 ;
18 51 78 78 78 ;
18 52 78 78 78 ;
18 78 78 78 78 ;
19 56 56 56 56 ;
19 56 56 56 49 ;
19 56 56 56 25 ;
19 56 56 56 51 ;
19 56 56 56 78 ;
19 56 56 49 49 ;
19 56 56 49 25 ;
19 56 56 49 51 ;
19 56 56 49 78 ;
19 56 56 25 51 ;
19 56 56 25 78 ;
19 56 56 51 51 ;
19 56 56 51 78 ;
19 56 56 78 78 ;
19 56 49 49 49 ;
19 56 49 49 25 ;
19 56 49 49 51 ;
19 56 49 49 78 ;
19 56 49 25 51 ;
19 56 49 25 78 ;
19 56 49 51 51 ;
19 56 49 51 78 ;
19 56 49 78 78 ;
19 56 25 51 51 ;
19 56 25 51 78 ;
19 56 25 78 78 ;
19 56 51 51 51 ;
19 56 51 51 78 ;
19 56 51 78 78 ;
19 56 78 78 78 ;
19 49 49 49 49 ;
19 49 49 49 25 ;
19 49 49 49 51 ;
19 49 49 49 78 ;
19 49 49 25 51 ;
19 49 49 25 78 ;
19 49 49 51 51 ;
19 49 49 51 78 ;
19 49 49 78 78 ;
19 49 25 51 51 ;
19 49 25 51 78 ;
19 49 25 78 78 ;
19 49 51 51 51 ;
19 49 51 51 78 ;
19 49 51 78 78 ;
19 49 78 78 78 ;
19 25 51 51 51 ;
19 25 51 51 78 ;
19 25 51 78 78 ;
19 25 78 78 78 ;
19 51 51 51 51 ;
19 51 51 51 78 ;
19 51 51 78 78 ;
19 51 78 78 78 ;
19 78 78 78 78 ;
20 30 30 30 30 ;
20 30 30 30 31 ;
20 30 30 30 32 ;
20 30 30 30 39 ;
20 30 30 30 40 ;
20 30 30 31 39 ;
20 30 30 32 40 ;
22 24 24 24 24 ;
22 50 50 50 50 ;
]);
M_.lhs = {
'C'; 
'r_D'; 
'C_G'; 
'C_NG'; 
'exp(r(1))'; 
'exp(r_f)'; 
'a(1)'; 
'I_G'; 
'I_NG'; 
'a_G(1)'; 
'a_NG(1)'; 
'z'; 
'Y'; 
'Y_G'; 
'Y_NG'; 
'K_G'; 
'K_NG'; 
'P_G'; 
'P_NG'; 
'P'; 
'I'; 
'log(A_G)'; 
'pi_G'; 
'pi_NG'; 
'tau'; 
'D'; 
};
M_.static_tmp_nbr = [13; 10; 0; 0; ];
M_.block_structure_stat.block(1).Simulation_Type = 3;
M_.block_structure_stat.block(1).endo_nbr = 1;
M_.block_structure_stat.block(1).mfs = 1;
M_.block_structure_stat.block(1).equation = [ 22];
M_.block_structure_stat.block(1).variable = [ 24];
M_.block_structure_stat.block(2).Simulation_Type = 6;
M_.block_structure_stat.block(2).endo_nbr = 16;
M_.block_structure_stat.block(2).mfs = 16;
M_.block_structure_stat.block(2).equation = [ 2 5 6 7 1 21 10 11 12 13 14 15 16 17 18 19];
M_.block_structure_stat.block(2).variable = [ 8 23 25 7 15 18 26 9 4 1 2 3 10 11 13 14];
M_.block_structure_stat.block(3).Simulation_Type = 6;
M_.block_structure_stat.block(3).endo_nbr = 3;
M_.block_structure_stat.block(3).mfs = 3;
M_.block_structure_stat.block(3).equation = [ 3 4 20];
M_.block_structure_stat.block(3).variable = [ 5 6 12];
M_.block_structure_stat.block(4).Simulation_Type = 1;
M_.block_structure_stat.block(4).endo_nbr = 6;
M_.block_structure_stat.block(4).mfs = 6;
M_.block_structure_stat.block(4).equation = [ 23 24 25 26 9 8];
M_.block_structure_stat.block(4).variable = [ 16 17 22 21 20 19];
M_.block_structure_stat.variable_reordered = [ 24 8 23 25 7 15 18 26 9 4 1 2 3 10 11 13 14 5 6 12 16 17 22 21 20 19];
M_.block_structure_stat.equation_reordered = [ 22 2 5 6 7 1 21 10 11 12 13 14 15 16 17 18 19 3 4 20 23 24 25 26 9 8];
M_.block_structure_stat.incidence.sparse_IM = [
 1 4;
 1 15;
 2 7;
 2 8;
 2 15;
 2 25;
 2 26;
 3 4;
 3 5;
 3 12;
 3 13;
 4 4;
 4 6;
 4 12;
 4 14;
 5 23;
 5 26;
 6 23;
 6 25;
 7 7;
 7 18;
 8 8;
 8 19;
 9 9;
 9 20;
 10 4;
 10 8;
 10 23;
 10 25;
 10 26;
 11 7;
 11 8;
 11 9;
 12 4;
 12 23;
 13 1;
 13 2;
 13 3;
 14 2;
 14 10;
 14 24;
 15 3;
 15 11;
 16 8;
 16 10;
 16 13;
 16 26;
 17 9;
 17 11;
 17 14;
 17 25;
 18 4;
 18 13;
 18 23;
 18 24;
 18 25;
 18 26;
 19 4;
 19 14;
 19 23;
 19 25;
 19 26;
 20 4;
 20 5;
 20 6;
 20 12;
 20 13;
 20 14;
 21 1;
 21 4;
 21 18;
 22 24;
 23 2;
 23 10;
 23 13;
 23 16;
 23 26;
 24 3;
 24 11;
 24 14;
 24 17;
 24 25;
 25 4;
 25 12;
 25 16;
 25 17;
 25 22;
 26 10;
 26 21;
 26 22;
 26 26;
];
M_.block_structure_stat.tmp_nbr = 23;
M_.block_structure_stat.block(1).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(1).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(1).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(2).g1_sparse_rowval = int32([1 7 8 13 2 3 7 9 15 16 1 3 7 14 15 16 1 4 8 1 5 4 6 1 2 7 13 15 16 8 14 5 6 7 9 15 16 6 10 10 11 10 12 11 13 12 14 13 15 14 16 ]);
M_.block_structure_stat.block(2).g1_sparse_colval = int32([1 1 1 1 2 2 2 2 2 2 3 3 3 3 3 3 4 4 4 5 5 6 6 7 7 7 7 7 7 8 8 9 9 9 9 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 ]);
M_.block_structure_stat.block(2).g1_sparse_colptr = int32([1 5 11 17 20 22 24 30 32 38 40 42 44 46 48 50 52 ]);
M_.block_structure_stat.block(3).g1_sparse_rowval = int32([1 3 2 3 1 2 3 ]);
M_.block_structure_stat.block(3).g1_sparse_colval = int32([1 1 2 2 3 3 3 ]);
M_.block_structure_stat.block(3).g1_sparse_colptr = int32([1 3 5 8 ]);
M_.block_structure_stat.block(4).g1_sparse_rowval = int32([]);
M_.block_structure_stat.block(4).g1_sparse_colval = int32([]);
M_.block_structure_stat.block(4).g1_sparse_colptr = int32([]);
M_.static_g1_sparse_rowval = int32([13 21 13 14 23 13 15 24 1 3 4 10 12 18 19 20 21 25 3 20 4 20 2 7 11 2 8 10 11 16 9 11 17 14 16 23 26 15 17 24 3 4 20 25 3 16 18 20 23 4 17 19 20 24 1 2 23 25 24 25 7 21 8 9 26 25 26 5 6 10 12 18 19 14 18 22 2 6 10 17 18 19 24 2 5 10 16 18 19 23 26 ]);
M_.static_g1_sparse_colval = int32([1 1 2 2 2 3 3 3 4 4 4 4 4 4 4 4 4 4 5 5 6 6 7 7 7 8 8 8 8 8 9 9 9 10 10 10 10 11 11 11 12 12 12 12 13 13 13 13 13 14 14 14 14 14 15 15 16 16 17 17 18 18 19 20 21 22 22 23 23 23 23 23 23 24 24 24 25 25 25 25 25 25 25 26 26 26 26 26 26 26 26 ]);
M_.static_g1_sparse_colptr = int32([1 3 6 9 19 21 23 26 31 34 38 41 45 50 55 57 59 61 63 64 65 66 68 74 77 84 92 ]);
M_.params(1) = 0.9;
beta = M_.params(1);
M_.params(2) = 0.5;
psi = M_.params(2);
M_.params(3) = 0.4;
phi = M_.params(3);
M_.params(4) = 0.3;
alpha_G = M_.params(4);
M_.params(5) = 0.3;
alpha_NG = M_.params(5);
M_.params(6) = 0.7;
Delta_agg = M_.params(6);
M_.params(7) = 0.4;
Delta_G = M_.params(7);
M_.params(8) = 0.3;
Delta_NG = M_.params(8);
M_.params(9) = 0.3;
gamma_G = M_.params(9);
M_.params(10) = 0.3;
gamma_NG = M_.params(10);
M_.params(11) = 0.4;
theta = M_.params(11);
M_.params(12) = 0.3;
rho = M_.params(12);
M_.params(13) = 0.3;
T_v = M_.params(13);
M_.params(14) = 0.4;
T_c = M_.params(14);
M_.params(15) = 1;
A_NG = M_.params(15);
%
% INITVAL instructions
%
options_.initval_file = false;
oo_.steady_state(24) = 1;
oo_.steady_state(25) = 1/M_.params(1)-1+M_.params(8);
oo_.steady_state(26) = 1/M_.params(1)-1+M_.params(7);
oo_.steady_state(15) = 1/M_.params(1)+M_.params(6)-1;
oo_.steady_state(13) = (1-M_.params(11))*oo_.steady_state(26)*M_.params(3)/(M_.params(9)*oo_.steady_state(24)*(M_.params(3)-1))*((oo_.steady_state(26)-oo_.steady_state(25))/(M_.params(2)*(oo_.steady_state(26)-oo_.steady_state(25))^2))^(1-M_.params(9));
oo_.steady_state(14) = ((oo_.steady_state(26)-oo_.steady_state(25))/(M_.params(2)*(oo_.steady_state(26)-oo_.steady_state(25))^2))^(1-M_.params(9))*M_.params(3)*oo_.steady_state(25)/(M_.params(9)*oo_.steady_state(24)*(M_.params(3)-1));
oo_.steady_state(10) = ((1-M_.params(11))*oo_.steady_state(26)*M_.params(3)/((M_.params(3)-1)*M_.params(9)*oo_.steady_state(13)))^(1/(M_.params(9)-1));
oo_.steady_state(11) = (M_.params(3)*oo_.steady_state(25)/((M_.params(3)-1)*oo_.steady_state(14)*M_.params(10)))^(1/(M_.params(10)-1));
oo_.steady_state(2) = oo_.steady_state(24)*oo_.steady_state(10);
oo_.steady_state(3) = M_.params(15)*oo_.steady_state(11);
oo_.steady_state(1) = oo_.steady_state(2)+oo_.steady_state(3);
oo_.steady_state(23) = M_.params(2);
oo_.steady_state(19) = M_.params(7)*oo_.steady_state(10);
oo_.steady_state(20) = M_.params(8)*oo_.steady_state(11);
oo_.steady_state(18) = oo_.steady_state(19)+oo_.steady_state(20);
oo_.steady_state(4) = oo_.steady_state(1)-oo_.steady_state(18);
oo_.steady_state(5) = (oo_.steady_state(13)*(1+M_.params(13))/oo_.steady_state(12))^(-M_.params(3))*1/M_.params(4)*oo_.steady_state(4);
oo_.steady_state(6) = oo_.steady_state(4)*(oo_.steady_state(14)*(1+M_.params(13))/oo_.steady_state(12))^(-M_.params(3))*1/M_.params(5);
oo_.steady_state(7) = oo_.steady_state(8)+oo_.steady_state(9);
oo_.steady_state(8) = (oo_.steady_state(15)-oo_.steady_state(25))/(oo_.steady_state(26)-oo_.steady_state(25))*oo_.steady_state(7);
oo_.steady_state(9) = 1-oo_.steady_state(8);
oo_.steady_state(12) = oo_.steady_state(13)*oo_.steady_state(5)/oo_.steady_state(4)+oo_.steady_state(14)*oo_.steady_state(6)/oo_.steady_state(4);
if M_.exo_nbr > 0
	oo_.exo_simul = ones(M_.maximum_lag,1)*oo_.exo_steady_state';
end
if M_.exo_det_nbr > 0
	oo_.exo_det_simul = ones(M_.maximum_lag,1)*oo_.exo_det_steady_state';
end
steady;
oo_.dr.eigval = check(M_,options_,oo_);
%
% SHOCKS instructions
%
M_.exo_det_length = 0;
M_.Sigma_e(1, 1) = (0.01)^2;
options_.k_order_solver = true;
options_.irf = 20;
options_.order = 4;
var_list_ = {};
[info, oo_, options_, M_] = stoch_simul(M_, options_, oo_, var_list_);


oo_.time = toc(tic0);
disp(['Total computing time : ' dynsec2hms(oo_.time) ]);
if ~exist([M_.dname filesep 'Output'],'dir')
    mkdir(M_.dname,'Output');
end
save([M_.dname filesep 'Output' filesep 'dsge_results.mat'], 'oo_', 'M_', 'options_');
if exist('estim_params_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'dsge_results.mat'], 'estim_params_', '-append');
end
if exist('bayestopt_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'dsge_results.mat'], 'bayestopt_', '-append');
end
if exist('dataset_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'dsge_results.mat'], 'dataset_', '-append');
end
if exist('estimation_info', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'dsge_results.mat'], 'estimation_info', '-append');
end
if exist('dataset_info', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'dsge_results.mat'], 'dataset_info', '-append');
end
if exist('oo_recursive_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'dsge_results.mat'], 'oo_recursive_', '-append');
end
if exist('options_mom_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'dsge_results.mat'], 'options_mom_', '-append');
end
if ~isempty(lastwarn)
  disp('Note: warning(s) encountered in MATLAB/Octave code')
end
